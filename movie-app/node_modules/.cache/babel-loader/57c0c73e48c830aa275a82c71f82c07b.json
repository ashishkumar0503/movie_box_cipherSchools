{"ast":null,"code":"var _jsxFileName = \"D:\\\\movie_box_cipherSchools-main\\\\movie_box_cipherSchools-main\\\\movie-app\\\\src\\\\components\\\\Row\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow = false\n  } = _ref;\n  const [movie, setMovie] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const request = await axios.get(fetchUrl);\n    setMovie(request.data.results);\n  }\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.original_title) || \"\").then(url => {\n        console.log(url);\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movie === null || movie === void 0 ? void 0 : movie.map(movie => movie !== null && movie !== void 0 && movie.poster_path && movie !== null && movie !== void 0 && movie.backdrop_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row_poster ${isLargeRow && \"rowPoster_large\"}`,\n        onClick: () => handleClick(movie),\n        src: `${base_url}${isLargeRow ? movie === null || movie === void 0 ? void 0 : movie.poster_path : movie === null || movie === void 0 ? void 0 : movie.backdrop_path}`,\n        alt: movie === null || movie === void 0 ? void 0 : movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this) : \"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"UbeID/ICDaJmiDThjhVI+mN+2n8=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["axios","React","useEffect","useState","YouTube","movieTrailer","Row","title","fetchUrl","isLargeRow","movie","setMovie","trailerUrl","setTrailerUrl","base_url","fetchData","request","get","data","results","opts","height","width","playerVars","autoplay","handleClick","name","original_title","then","url","console","log","urlParams","URLSearchParams","URL","search","catch","error","map","poster_path","backdrop_path","id"],"sources":["D:/movie_box_cipherSchools-main/movie_box_cipherSchools-main/movie-app/src/components/Row/Row.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\nimport \"./Row.css\";\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n  const [movie, setMovie] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const request = await axios.get(fetchUrl);\n    setMovie(request.data.results);\n  }\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(movie?.name || movie?.title || movie?.original_title || \"\")\n        .then((url) => {\n          console.log(url);\n          const urlParams = new URLSearchParams(new URL(url).search);\n\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h1>{title} </h1>\n      <div className=\"row_posters\">\n        {movie?.map((movie) =>\n          movie?.poster_path && movie?.backdrop_path ? (\n            <img\n              className={`row_poster ${isLargeRow && \"rowPoster_large\"}`}\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              src={`${base_url}${\n                isLargeRow ? movie?.poster_path : movie?.backdrop_path\n              }`}\n              alt={movie?.name}\n            />\n          ) : (\n            \"\"\n          )\n        )}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;"],"mappings":"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"},"metadata":{},"sourceType":"module"}